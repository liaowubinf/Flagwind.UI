//
// * Flagwind.UI v1.0.0
// * Copyright 2014 Flagwind Inc. All rights reserved.
// * Licensed under the MIT License.
// * https://github.com/Flagwind/Flagwind.UI/blob/master/LICENSE
//


// ============================= 通用(Normal) ============================ //


//
// #public 清除浮动。
//

.clear()
{
    &:before,
    &:after
    {
        display: table;
        content: " ";
    }

    &:after
    {
        clear: both;
    }
}

.opacity(@opacity)
{
    opacity: @opacity;
    @opacity-ie: (@opacity * 100);
    filter: ~"alpha(opacity=@{opacity-ie})";
}

//
// #public 内容块居中。
//

.center-block()
{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

//
// #public 隐藏文本。
//

.text-hide()
{
    font: ~"0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

//
// #public tab 焦点。
//

.tab-focus()
{
    outline: thin dotted;
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

//
// #public 文本截取。
//

.text-overflow(@display: block)
{
    display: @display;
    word-wrap: normal;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

.text-emphasis-variant(@color)
{
    color: @color;

    a&:hover
    {
        color: darken(@color, 10%);
    }
}

.bg-variant(@backcolor)
{
    background-color: @backcolor;

    a&:hover
    {
        background-color: darken(@backcolor, 10%);
    }
}

.bg-variant(@color, @backcolor)
{
    color: @color;

    background-color: @backcolor;

    a&
    {
        color: @color;

        :hover
        {
            background-color: darken(@backcolor, 10%);
        }
    }
}

.scrollable-horizontal(@width: @horizontal-scrollable-width)
{
    width: @width;
    overflow-y: hidden;
    overflow-x: auto;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    -webkit-overflow-scrolling: touch;
}

.scrollable-vertical(@height: @vertical-scrollable-height)
{
    height: @height;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    resize: vertical;
}

.transition(@transition)
{
    -webkit-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
}

.transition-property(@transition-property)
{
    -webkit-transition-property: @transition-property;
            transition-property: @transition-property;
}

.transition-delay(@transition-delay)
{
    -webkit-transition-delay: @transition-delay;
            transition-delay: @transition-delay;
}

.transition-duration(@transition-duration)
{
    -webkit-transition-duration: @transition-duration;
            transition-duration: @transition-duration;
}

.transition-timing-function(@timing-function)
{
    -webkit-transition-timing-function: @timing-function;
            transition-timing-function: @timing-function;
}

.transition-transform(@transition)
{
    -webkit-transition: -webkit-transform @transition;
       -moz-transition: -moz-transform @transition;
         -o-transition: -o-transform @transition;
            transition: transform @transition;
}

.user-select(@select)
{
    -webkit-user-select: @select;
       -moz-user-select: @select;
        -ms-user-select: @select;
            user-select: @select;
}

.box-shadow(@shadow)
{
    -webkit-box-shadow: @shadow;
            box-shadow: @shadow;
}

.box-sizing(@boxmodel)
{
    -webkit-box-sizing: @boxmodel;
       -moz-box-sizing: @boxmodel;
            box-sizing: @boxmodel;
}

.reset-filter()
{
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}

//
// #public 圆角边框。
//

.border-top-radius(@radius)
{
    border-top-right-radius: @radius;
    border-top-left-radius: @radius;
}

.border-right-radius(@radius)
{
    border-bottom-right-radius: @radius;
    border-top-right-radius: @radius;
}

.border-bottom-radius(@radius)
{
    border-bottom-right-radius: @radius;
    border-bottom-left-radius: @radius;
}

.border-left-radius(@radius)
{
    border-bottom-left-radius: @radius;
    border-top-left-radius: @radius;
}

.nav-divider(@color: #e5e5e5, @margin: ((@line-height-computed / 2) - 1))
{
    height: 1px;
    margin: @margin 0;
    overflow: hidden;
    background-color: @color;
}


// ============================= 布局(Layout) ============================ //


//
// #public 响应式显示辅助。
//

.responsive-visibility()
{
    display: block !important;

    table&
    {
        display: table;
    }

    tr&
    {
        display: table-row !important;
    }

    th&,
    td&
    {
        display: table-cell !important;
    }
}

//
// #public 响应式隐藏辅助。
//

.responsive-invisibility()
{
    display: none !important;
}

//
// #private 布局基础。
//

.layout-base()
{
    margin-right: auto;
    margin-left: auto;
    &:extend(.clear all);

    .layout,
    {
        width: auto;
        margin-right: -(@layout-gutter-width / 2);
        margin-left: -(@layout-gutter-width / 2);
    }
}

//
// #internal 百分百布局。
//

.layout-fluid()
{
    width: 100% !important;
}

//
// #internal 填充式布局。
//

.layout-fill()
{
    position: relative;
    min-height: 1px;
    padding-left: (@layout-gutter-width / 2);
    padding-right: (@layout-gutter-width / 2);
}

//
// #public 生成一个默认(响应式)布局。
//

.build-layout()
{
    .build-layout(responsive);
}

//
// #public 生成一个响应式布局。
//

.build-layout(@type) when (@type = responsive)
{
    .layout-base();

    @media (min-width: @screen-sm-min)
    {
        width: @layout-sm;
    }

    @media (min-width: @screen-md-min)
    {
        width: @layout-md;
    }

    @media (min-width: @screen-lg-min)
    {
        width: @layout-lg;
    }
}

//
// #public 生成一个百分百布局。
//

.build-layout(@type) when (@type = fluid)
{
    .layout-base();

    .layout-fluid();
}

//
// #public 生成一个填充式布局。
//
// #param @type [responsive|fluid] 必选项，尺寸。
//

.build-layout(@type, @method) when (@method = fill)
{
    .build-layout(@type);

    .layout-fill();
}

//
// #public 定义布局份数。
//

.define-layout-flexes()
{
    .flex(@index)
    {
        @item: ~".flex-xs-@{index}, .flex-sm-@{index}, .flex-md-@{index}, .flex-lg-@{index}";

        .flex((@index + 1), @item);
    }

    .flex(@index, @list) when (@index =< @layout-flexes)
    {
        @item: ~".flex-xs-@{index}, .flex-sm-@{index}, .flex-md-@{index}, .flex-lg-@{index}";

        .flex((@index + 1), ~"@{list}, @{item}");
    }

    .flex(@index, @list) when (@index > @layout-flexes)
    {
        @{list}
        {
            position: relative;
            min-height: 1px;
            padding-left: (@layout-gutter-width / 2);
            padding-right: (@layout-gutter-width / 2);
        }
    }

    .flex(1);
}

//
// #public 生成指定尺寸的布局份数。
//
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.build-layout-flex(@size)
{
    .float-layout-flexes(@size);
    .loop-layout-flexes(width, @layout-flexes, @size);
    .loop-layout-flexes(push, @layout-flexes, @size);
    .loop-layout-flexes(pull, @layout-flexes, @size);
    .loop-layout-flexes(offset, @layout-flexes, @size);
}

//
// #public 生成超小屏幕(xs)布局份数。
//
// #param @flexes [number] 必选项，所占数。
//

.build-layout-xs-flex(@flexes; @gutter: @layout-gutter-width)
{
    position: relative;
    float: left;
    width: percentage((@flexes / @layout-flexes));
    min-height: 1px;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);
}

.build-layout-xs-flex-offset(@flexes)
{
    margin-left: percentage((@flexes / @layout-flexes));
}

.build-layout-xs-flex-push(@flexes)
{
    left: percentage((@flexes / @layout-flexes));
}

.build-layout-xs-flex-pull(@flexes)
{
    right: percentage((@flexes / @layout-flexes));
}

//
// #public 生成小屏幕(sm)布局份数。
//
// #param @flexes [number] 必选项，所占数。
//

.build-layout-sm-flex(@flexes; @gutter: @layout-gutter-width)
{
    position: relative;
    min-height: 1px;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);

    @media (min-width: @screen-sm-min)
    {
        float: left;
        width: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-sm-flex-offset(@flexes)
{
    @media (min-width: @screen-sm-min)
    {
        margin-left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-sm-flex-push(@flexes)
{
    @media (min-width: @screen-sm-min)
    {
        left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-sm-flex-pull(@flexes)
{
    @media (min-width: @screen-sm-min)
    {
        right: percentage((@flexes / @layout-flexes));
    }
}

//
// #public 生成中等屏幕(md)布局份数。
//
// #param @flexes [number] 必选项，所占数。
//

.build-layout-md-flex(@flexes; @gutter: @layout-gutter-width)
{
    position: relative;
    min-height: 1px;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);

    @media (min-width: @screen-md-min)
    {
        float: left;
        width: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-md-flex-offset(@flexes)
{
    @media (min-width: @screen-md-min)
    {
        margin-left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-md-flex-push(@flexes)
{
    @media (min-width: @screen-md-min)
    {
        left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-md-flex-pull(@flexes)
{
    @media (min-width: @screen-md-min)
    {
        right: percentage((@flexes / @layout-flexes));
    }
}

//
// #public 生成大屏幕(lg)布局份数。
//
// #param @flexes [number] 必选项，所占数。
//

.build-layout-lg-flex(@flexes; @gutter: @layout-gutter-width)
{
    position: relative;
    min-height: 1px;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);

    @media (min-width: @screen-lg-min)
    {
        float: left;
        width: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-lg-flex-offset(@flexes)
{
    @media (min-width: @screen-lg-min)
    {
        margin-left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-lg-flex-push(@flexes)
{
    @media (min-width: @screen-lg-min)
    {
        left: percentage((@flexes / @layout-flexes));
    }
}

.build-layout-lg-flex-pull(@flexes)
{
    @media (min-width: @screen-lg-min)
    {
        right: percentage((@flexes / @layout-flexes));
    }
}

//
// #private 浮动布局份数。
//
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.float-layout-flexes(@size)
{
    .flex(@index)
    {
        @item: ~".flex-@{size}-@{index}";

        .flex((@index + 1), @item);
    }

    .flex(@index, @list) when (@index =< @layout-flexes)
    {
        @item: ~".flex-@{size}-@{index}";

        .flex((@index + 1), ~"@{list}, @{item}");
    }

    .flex(@index, @list) when (@index > @layout-flexes)
    {
        @{list}
        {
            float: left;
        }
    }

    .flex(1);
}

//
// #private 计算布局份数的宽度。
//
// #param @type [width] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = width) and (@index > 0)
{
    .flex-@{size}-@{index}
    {
        width: percentage((@index / @layout-flexes));
    }
}

//
// #private 计算布局份数的排序。
//
// #param @type [push] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = push) and (@index > 0)
{
    .flex-@{size}-push-@{index}
    {
        left: percentage((@index / @layout-flexes));
    }
}

//
// #private 计算布局份数的排序。
//
// #param @type [push] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = push) and (@index = 0)
{
    .flex-@{size}-push-0
    {
        left: auto;
    }
}

//
// #private 计算布局份数的排序。
//
// #param @type [pull] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = pull) and (@index > 0)
{
    .flex-@{size}-pull-@{index}
    {
        right: percentage((@index / @layout-flexes));
    }
}

//
// #private 计算布局份数的排序。
//
// #param @type [pull] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = pull) and (@index = 0)
{
    .flex-@{size}-pull-0
    {
        right: auto;
    }
}

//
// #private 计算布局份数的排序。
//
// #param @type [pull] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.calc-layout-flex(@type, @index, @size) when (@type = offset)
{
    .flex-@{size}-offset-@{index}
    {
        margin-left: percentage((@index / @layout-flexes));
    }
}

//
// #private 递归计算布局份数。
//
// #param @type [width|pull|push|offset] 必选项，类型。
// #param @index [number] 必选项，索引。
// #param @size [xs|sm|md|lg] 必选项，尺寸。
//

.loop-layout-flexes(@type, @index, @size) when (@index >= 0)
{
    .calc-layout-flex(@type, @index, @size);

    .loop-layout-flexes(@type, (@index - 1), @size);
}


// ============================= 图片(Images) ============================ //


.img-responsive(@display: block)
{
    display: @display;
    max-width: 100%;
    height: auto;
}


// ============================= 按钮(Buttons) =========================== //


//
// #public 按钮尺寸。
//

.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius)
{
    padding: @padding-vertical @padding-horizontal;
    font-size: @font-size;
    line-height: @line-height;
    border-radius: @border-radius;
}

.button-variant(@color; @backcolor; @border)
{
    color: @color;
    background-color: @backcolor;
    border-color: @border;

    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active
    {
        color: @color;
        background-color: darken(@backcolor, 10%);
        border-color: darken(@border, 12%);
    }

    &:active,
    &.active
    {
        background-image: none;
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] &
    {
        &,
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active
        {
            background-color: @backcolor;
            border-color: @border;
        }
    }

    .badge
    {
        color: @backcolor;
        background-color: @color;
    }
}


// ============================== 表单(Forms) ============================ //


.placeholder(@color: @input-placeholder-color)
{
    &::-moz-placeholder
    {
        color: @color;
        opacity: 1;
    }

    &:-ms-input-placeholder
    {
        color: @color;
    }

    &::-webkit-input-placeholder
    {
        color: @color;
    }
}

.input-focus(@color: @input-border-focus)
{
    @color-rgba: rgba(red(@color), green(@color), blue(@color), .3);

    border-color: @color;
    outline: 0;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px @{color-rgba}");
}

.field-size(@height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius)
{
    height: @height;
    padding: @padding-vertical @padding-horizontal;
    font-size: @font-size !important;
    line-height: @line-height;
    border-radius: @border-radius;
}

.input-icon()
{
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;
    display: block;
    width: @input-height-md;
    height: @input-height-md;
    line-height: @input-height-md;
    text-align: center;
    //pointer-events: none;
    color: @field-icon-color;
}

.input-icon-size(@width, @height, @line-height)
{
    width: @width;
    height: @height;
    line-height: @line-height;
}

.field-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5)
{
    .help,
    .label,
    .radio,
    .checkbox
    {
        color: @text-color;
    }

    .input,
    .select
    {
        border-color: @border-color;
        .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));

        &:focus
        {
            border-color: darken(@border-color, 10%);
            @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%);
            .box-shadow(@shadow);
        }
    }

    .icon
    {
        color: @text-color !important;
    }

    .field-group,
    .field-group&
    {
        .label
        {
            color: @text-color;
            border-color: @border-color;
            background-color: @background-color;
        }
    }
}


// ============================= 域组(Field group) ========================== //


.field-group-variant(@color, @backcolor, @border-color)
{
    .label
    {
        background: @backcolor;
        color: @color;
    }

    .label,
    .input,
    .addon > .btn
    {
        border-color: @border-color;
    }
}


// ================================ 角快(Angle) ============================= //


.angle-base()
{
    &:before,
    &:after
    {
        position: absolute;
        display: block;
        content: "";
        width: 0;
        height: 0;
        border: 8px dashed transparent;
        z-index: 1;
    }
}

.angle-up-variant(@border-color: #ddd; @bg-color: #fff; @border-width: 8px)
{
    .angle-base();

    &:before,
    &:after
    {
        border-bottom-style: solid;
        border-width: 0 @border-width @border-width;
    }

    &:before
    {
        border-bottom-color: @border-color;
        bottom: 0;
    }

    &:after
    {
        border-bottom-color: @bg-color;
        bottom: -1px;
    }
}

.angle-down-variant(@border-color: #ddd; @bg-color: #fff; @border-width: 8px)
{
    .angle-base();

    bottom: -(@border-width + 1);

    &:before,
    &:after
    {
        border-top-style: solid;
        border-width: @border-width @border-width 0;
    }

    &:before
    {
        border-top-color: @border-color;
        bottom: 0;
    }

    &:after
    {
        border-top-color: @bg-color;
        bottom: 1px;
    }
}

.angle-left-variant(@border-color: #ddd; @bg-color: #fff; @border-width: 8px)
{
    .angle-base();

    left: -(@border-width + 1);

    &:before,
    &:after
    {
        border-right-style: solid;
        border-width: @border-width @border-width @border-width 0;
    }

    &:before
    {
        border-right-color: @border-color;
        left: 0;
    }

    &:after
    {
        border-right-color: @bg-color;
        left: 1px;
    }
}

.angle-right-variant(@border-color: #ddd; @bg-color: #fff; @border-width: 8px)
{
    .angle-base();

    right: 0;

    &:before,
    &:after
    {
        border-left-style: solid;
        border-width: @border-width 0 @border-width @border-width;
    }

    &:before
    {
        border-left-color: @border-color;
        left: 0;
    }

    &:after
    {
        border-left-color: @bg-color;
        left: -1px;
    }
}


// ============================= 分页(Pagination) =========================== //


//
// #public 分页尺寸。
//

.pagination-size(@padding-vertical, @padding-horizontal, @font-size)
{
    > li
    {
        > a,
        > span
        {
            padding: @padding-vertical @padding-horizontal;
            font-size: @font-size;
        }
    }
}

// ============================= 警告框(Alert) =========================== //


//
// #public 警告框样式。
//

.alert-variant(@background, @border, @color)
{
    background-color: @background;
    border-color: @border;
    color: @color;

    .alert-link
    {
        color: darken(@color, 6%);
    }
}


// ============================= 开关(Switch) =========================== //


//
// #public 开关尺寸。
//

.switch-size(@switch-height)
{
    input[type="checkbox"] + label,
    input[type="radio"] + label
    {
        width: @switch-height * 2;
        height: @switch-height;
    }

    input[type="checkbox"] + label:after,
    input[type="radio"] + label:after
    {
        width: @switch-height - 8;
        height: @switch-height - 8;
    }

    input[type="checkbox"]:checked + label:after,
    input[type="radio"]:checked + label:after
    {
        left: @switch-height + 4;
    }
}